<p style="color: green"><%= notice %></p>
<div class="content-container">
  <%= content_tag :div, id: 'product-id', data: { id: @product.id } do %>
    <p>
      <strong> <%= @product.product_name %></strong>
    </p>
  <% end %>
  <div>
    <p>
      <div id="price_field"> </div>
    </p>
    <%= form_with(model: @cart_item) do |form| %>
      <div class="field" id="type_field">
        <%= form.label :product_type_id, '类型' %>
        <%= form.select :product_type_id, @product.product_types.map{ |type| [type.product_type_name, type.id]} %>
      </div>
      <div class="field" id="color_field">
        <%= form.label :color, '颜色' %>
        <%= form.select :color, []%>
      </div>
      <div class="field" id="size_field">
        <%= form.label :size, '尺码'%>
        <%= form.select :size, [] %>
      </div>
      <div>
        <%= form.label :quantity, '数量:' %>
        <%= form.number_field :quantity, :value => 1, step: 1, min: 1 %>
      </div>
      <%= form.submit name: "buy" do %>
        立即购买
      <% end %>
      <%# <%= form.submit "购物车", class:"btn btn-warning"%> %>
      <button type="submit" name="car" class="btn btn-primary">
        <i class="fas fa-save"></i> Save Product
      </button>
      <%# <i class="fa fa-check"></i> Save %>
      <%# <% end %>
      <% if current_user.favorite?(@product) %>
        <%= link_to product_favorite_path(@product), data: { turbo_method: :delete},class:"btn btn-outline-warning"  do %>
          <i class="bi bi-star-fill"></i> 取消收藏
        <% end %>
      <% else %>
        <%= link_to product_favorite_path(@product), data: { turbo_method: :post}, class:"btn btn-outline-warning" do %>
          <i class="bi bi-star"></i> 收藏
        <% end %>
      <% end %>
    <% end %>
    <%= content_tag :div, id: 'product-id', data: { id: @product.id } do %>
      <p>
        <%= @product.description %>
      </p>
    <% end %>
  </p>
</div>
<script>
  // 获取表单元素
  var productId = document.getElementById("product-id").dataset.id;
  var productTypeIdField = document.getElementById('cart_item_product_type_id');
  var colorField = document.getElementById("color_field");
  var sizeField = document.getElementById("size_field");
  var priceField = document.getElementById("price_field");

  function productTypeChange() {
    console.log("product type changed")
    var selectedProductTypeId = productTypeIdField.value;
    var colorSelect = colorField.querySelector("select");
    var sizeSelect = sizeField.querySelector("select");
    if (selectedProductTypeId == "") {
      colorSelect.innerHTML = '';
      sizeSelect.innerHTML = '';
      priceField.textContent = "???"
    } else {
      fetch('/products/' + productId + '/product_types/' + selectedProductTypeId + '/price')
      .then(response => response.json())
      .then(data => {
        console.log(data);
        priceField.textContent = "￥" + data;
      }).catch(error => console.error("Error:", error));

      fetch('/products/' + productId + '/product_types/' + selectedProductTypeId + '/colors')
      .then(response => response.json())
      .then(data => {
        colorSelect.innerHTML = '';
        data.forEach(function(color) {
          var option = document.createElement("option");
          option.value = color;
          option.text = color;
          colorSelect.appendChild(option);
        });
      }).catch(error => console.error("Error:", error));

      fetch('/products/' + productId + '/product_types/' + selectedProductTypeId + '/colors')
      .then(response => response.json())
      .then(data => {
        colorSelect.innerHTML = '';
        data.forEach(function(color) {
          var option = document.createElement("option");
          option.value = color;
          option.text = color;
          colorSelect.appendChild(option);
        });
      }).catch(error => console.error("Error:", error));

      fetch('/products/' + productId + '/product_types/' + selectedProductTypeId + '/sizes')
      .then(response => response.json())
      .then(data => {
        sizeSelect.innerHTML = '';
        data.forEach(function(size) {
          var option = document.createElement("option");
          option.value = size;
          option.text = size;
          sizeSelect.appendChild(option);
        });
      }).catch(error => console.error("Error:", error));
    }
    console.log("colorSelect.innerHTML: " + colorSelect.innerHTML)
  }

  productTypeChange();

  productTypeIdField.addEventListener('change', function() {
    productTypeChange();
  });
</script>
